// Aidan Heffron 830003427

/**
 * Memory of 64 registers, each 16 bit-wide. The pin out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
	// Design using RAM8 from nand2tetris builtin chips
    DMux8Way(in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM8(in=in, load=a, address=address[0..2], out=outA);
    RAM8(in=in, load=b, address=address[0..2], out=outB);
    RAM8(in=in, load=c, address=address[0..2], out=outC);
    RAM8(in=in, load=d, address=address[0..2], out=outD);
    RAM8(in=in, load=e, address=address[0..2], out=outE);
    RAM8(in=in, load=f, address=address[0..2], out=outF);
    RAM8(in=in, load=g, address=address[0..2], out=outG);
    RAM8(in=in, load=h, address=address[0..2], out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[3..5], out=out);
    
}