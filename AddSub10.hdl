// Aidan Heffron 830003427

/**
 * Adds or Subtracts two 10-bit values.
 * Both inputs a and b are in SIGNED 2s complement format
 * when sub == 0, the chip performs add i.e. out=a+b
 * when sub == 1, the chip performs subtract i.e. out=a-b
 * carry reflects the overflow calculated for 10-bit add/subtract in 2s complement
 */

CHIP AddSub10 {
    IN a[10], b[10], sub;
    OUT out[10], carry;

    PARTS:

    // Put you code here:
    Negation16(in[0..9]=b[0..9], out[0..9]=notB);
    Mux16(a[0..9]=b, b[0..9]=notB, sel=sub, out[0..3]=b1, out[4..7]=b2, out[8..8]=b3, out[9..9]=b4);

    RCA4(a=a[0..3],b=b1, cin=false, out=out[0..3],carry= c1);
    RCA4(a=a[4..7], b=b2, cin=c1, out=out[4..7], carry=c2);
    FullAdder(a=a[8..8], b=b3, c=c2, sum=out[8..8], carry=c3);
    FullAdder(a=a[9..9], b=b4, c=c3, sum=out[9..9], carry=c4);

    Xor(a=c3, b=c4, out=carry);

}